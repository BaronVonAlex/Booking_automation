# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    exclude:
      - '*'

pr:
  branches:
    include:
      - '*'

pool:
  vmImage: ubuntu-latest

stages:
  - stage: TestAndGenerateReport
    jobs:
      - job: ExecuteTests
        displayName: 'Run Test Automation'
        steps:
          - script: |
              sudo apt-get update && sudo apt-get install -y google-chrome-stable
              sudo apt-get update && sudo apt-get install -y openjdk-17-jdk openjdk17-jdk-maven allure
              wget https://github.com/allure-framework/allure2/releases/download/2.28.0/allure-2.28.0.tgz && tar -zxvf allure-2.28.0.tgz -C /opt/ && sudo ln -s /opt/allure-2.28.0/bin/allure /usr/bin/allure
            displayName: 'Prepare Environment'

          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'test'
              options: '-Dsurefire.suiteXmlFiles=testng.xml'
              publishJUnitResults: true
              testResultsFiles: '***/surefire-reports/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: 1.17
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false
            continueOnError: true

          - script: |
              chmod +x check_allure_history.sh
              ./check_allure_history.sh
              allure generate -c allure-results -o allure-report
            displayName: 'Generate Allure Report'
            continueOnError: true

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'allure-results'
              artifactName: 'allure-results'
              publishLocation: 'pipeline'
            displayName: 'Publish Allure Report Artifact'

  - stage: PublishReport
    dependsOn: TestAndGenerateReport
    jobs:
      - job: PublishAllureReport
        displayName: 'Publish Report'
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'allure-results'
              path: 'allure-results'
            displayName: 'Download Allure Report Artifact'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'allure-results'
              artifactName: 'allure-results'
              publishLocation: 'pipeline'
            displayName: 'Publish Allure Report'

          - task: PublishAllureReport@1
            inputs:
              allureVersion: '2.28.0'
              testResultsDir: 'allure-results'